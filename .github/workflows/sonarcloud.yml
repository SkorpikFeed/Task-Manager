# This workflow helps you trigger a SonarCloud analysis of your code and populates
# GitHub Code Scanning alerts with the vulnerabilities found.
# Free for open source project.

name: SonarCloud analysis

on:
  push:
    branches: 
    - main
    - develop
  pull_request:
    branches: 
    - main
    - develop
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn
      - name: Test and coverage
        run: yarn jest --coverage

      - name: Analyze with SonarCloud

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@v2.2.0
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   
        with:
          # Additional arguments for the SonarScanner CLI
          args:
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=SkorpikFeed_Task-Manager
            -Dsonar.organization=skorpikfeed
            -Dsonar.test.inclusions=**/*.test.js
            -Dsonar.tests=__tests__/main.test.js
            -Dsonar.inclusions=**/*.js,**/*.html,**/*.css
            -Dsonar.sources=src 
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            #-Dsonar.exclusions=**/node_modules/**,**/dist/**
            # Comma-separated paths to directories containing main source files.
            
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
          # When you need the analysis to take place in a directory other than the one from which it was launched, default is .
          projectBaseDir: .
